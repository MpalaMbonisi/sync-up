name: Java CI/CD to AWS Lightsail

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # The entire process is combined into a single job for simplicity and to
  # avoid issues with passing Docker images between jobs.
  build-test-scan-deploy:
    name: Build, Test, Scan, & Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write # This is required for the test reporter
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Make Maven Wrapper Executable
        run: chmod +x mvnw

      # The build and test steps are kept the same as they are correct.
      - name: Build, Test, and Package with Maven
        run: ./mvnw -B clean package

      - name: Build Docker Image
        run: |
            docker build -t ${{ secrets.LIGHTSAIL_SERVICE_NAME }}:${{ github.sha }} .


      - name: Generate Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

      # This is a critical step. The AWS CLI needs to be configured
      # for the subsequent Docker and Lightsail commands to work.
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Install the required Lightsail plugin
      - name: Install Lightsail Plugin
        run: |
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "/usr/local/bin/lightsailctl"
          chmod +x "/usr/local/bin/lightsailctl"

      # Use aws lightsail push-container-image to push the built image.
      - name: Push Docker Image to Lightsail
        run: |
          aws lightsail push-container-image \
            --service-name ${{ secrets.LIGHTSAIL_SERVICE_NAME }} \
            --label ${{ github.sha }} \
            --image ${{ secrets.LIGHTSAIL_SERVICE_NAME }}:${{ github.sha }}

      # This security scan now runs after the image has been built and pushed.
      - name: Scan for Vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}:${{ github.sha }}
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

      - name: Create Lightsail Deployment
        run: |
          aws lightsail create-container-service-deployment \
            --service-name ${{ secrets.LIGHTSAIL_SERVICE_NAME }} \
            --containers '{
              "my-app": {
                "image": "${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.LIGHTSAIL_SERVICE_NAME }}:${{ github.sha }}",
                "ports": {
                  "8080": "HTTP"
                }
              }
            }' \
            --public-endpoint '{"containerName":"my-app","containerPort":8080,"healthCheck":{"path":"/actuator/health"}}' \
            --environment '{
              "JWT_SECRET_KEY": "${{ secrets.JWT_SECRET_KEY }}",
              "SPRING_DATASOURCE_PASSWORD": "${{ secrets.SPRING_DATASOURCE_PASSWORD }}"
            }'
